<Window x:Class="NCSPgui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:MControls"
        xmlns:helper="clr-namespace:MHelper"
        xmlns:wpf="clr-namespace:Vlc.DotNet.Wpf;assembly=Vlc.DotNet.Wpf"
        xmlns:local="clr-namespace:NCSPgui"
        Title="MainWindow" Height="800" Width="1100" MinHeight="800" MinWidth="900" Background="{StaticResource mainBackgroundColour}">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
   <Window.Resources>
      <DataTemplate x:Key="MinCostsTemplate">
         <StackPanel>
            <controls:NTextBox NValue="{Binding}" Width="18"/>
         </StackPanel>
      </DataTemplate>
   </Window.Resources>
   <Grid>
      <Grid.RowDefinitions>
         <RowDefinition/>
         <RowDefinition Height="40"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
         <ColumnDefinition Width="Auto" MinWidth="500"/>
         <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <!-- Configuration -->
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="370"/>
            <RowDefinition/>
         </Grid.RowDefinitions>
         <GroupBox Header="Modelling"
                   Style="{StaticResource groupBoxMain}">
            <StackPanel Margin="2,5,2,5">
               <StackPanel.Tag>
                  <SolidColorBrush Color="Red"/>
               </StackPanel.Tag>
               <Grid>
                  <!-- Grid Properties -->
                  <Grid.RowDefinitions>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="Auto" MinHeight="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                     <RowDefinition Height="30"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto" MinWidth="120"/>
                     <ColumnDefinition Width="100"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <!-- Modelling Panel -->
                  <Label>Viewer Type</Label>
                  <ComboBox Grid.Column="1" 
                         x:Name="ViewerTypeComboBox"
                         Style="{StaticResource defaultComboBoxStyle}"
                         ItemsSource="{Binding ViewerTypes}"
                         SelectedValue="{Binding ViewerType, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"/>
                  <Label Grid.Row="1">Number of segments</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                       Grid.Row="1"
                                       Width="Auto" 
                                       Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="NumSegments" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="1" Maximum="10"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="2">Duration</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="2"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="Duration" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="30" Maximum="600"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="3">Duration Bound</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="3"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="DurationBound" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="0" Maximum="60"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="4">Character Appearance Rate</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="4"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="CharacterAppearanceRate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="1" Maximum="10"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="5">Minimum Costs</Label>
                  <ItemsControl Grid.Row="5" 
                             Grid.Column="1"
                             x:Name="MinCosts" 
                             ItemsSource="{Binding MinimumCosts}"
                             ItemTemplate="{StaticResource MinCostsTemplate}"
                             Padding="0, 5">
                     <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                           <WrapPanel Orientation="Horizontal" MaxWidth="100"/>
                        </ItemsPanelTemplate>
                     </ItemsControl.ItemsPanel>
                  </ItemsControl>
                  <Label Grid.Row="6">Variance</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="6"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="Variance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="0" Maximum="10"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="7">Number of Variants</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="7"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="NumVariants" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="0" Maximum="100"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="8">Library Multiplier</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                                   Grid.Row="8"
                                                   Width="Auto" 
                                                   Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="LibraryMultiplier" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="1" Maximum="100"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="9">Timeout (m/s)</Label>
                  <controls:NumericUpDown Grid.Column="1"
                                          Grid.Row="9"
                                          Width="Auto" 
                                          Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                     <controls:NumericUpDown.Value>
                        <Binding Path="Timeout" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                           <Binding.ValidationRules>
                              <controls:PositiveRangeNumberValidationRule>
                                 <controls:PositiveRangeNumberValidationRule.ValidRange>
                                    <helper:IntPair Minimum="0" Maximum="100000"/>
                                 </controls:PositiveRangeNumberValidationRule.ValidRange>
                              </controls:PositiveRangeNumberValidationRule>
                           </Binding.ValidationRules>
                        </Binding>
                     </controls:NumericUpDown.Value>
                  </controls:NumericUpDown>
                  <Label Grid.Row="10">Print Library Details</Label>
                  <StackPanel Grid.Column="1"
                           Grid.Row="10"
                           Orientation="Horizontal">
                     <CheckBox HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsChecked="{Binding PrintLibraryDetails, 
                                                         UpdateSourceTrigger=PropertyChanged}"/>
                     <Label HorizontalAlignment="Left"
                         VerticalAlignment="Center">Enabled</Label>
                  </StackPanel>
               </Grid>
            </StackPanel>
         </GroupBox>
         <GroupBox x:Name="DebugPaneGroupBox"
                   Header="Debug Pane"
                   Grid.Row="1"
                   Style="{StaticResource groupBoxMain}">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto" 
                          CanContentScroll="True">
               <TextBlock x:Name="DebugOutputPanel"   
                          Margin="2,5,2,0"
                          MinHeight="300"
                          MinWidth="350"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Stretch"
                          Text="{Binding DebugOutput}"/>
            </ScrollViewer>
         </GroupBox>
      </Grid>
      <!-- VLC Player -->
      <GroupBox Grid.Column="2" Style="{StaticResource groupBoxMain}" Header="Media Viewer">
         <StackPanel>
            <wpf:VlcControl x:Name="VLCMediaControl" 
                            xmlns:Vlc="clr-namespace:Vlc.DotNet.Wpf;assembly=Vlc.DotNet.Wpf"
                            MinHeight="300" 
                            Margin="10"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,10,0">
               <Button x:Name="VLCPlayButton" Style="{StaticResource standardButton}" Click="OnPlayButtonClick">Play</Button>
               <Button x:Name="VLCPauseButton" Style="{StaticResource standardButton}" Click="OnPauseButtonClick">Pause</Button>
               <Button x:Name="VLCStopButton" Style="{StaticResource standardButton}" Click="OnStopButtonClick">Stop</Button>
            </StackPanel>
            <TextBox x:Name="MediaOutputTextBox"
                     Style="{StaticResource ScrollableTextBoxWithHeader}"
                     Tag="Media Playback Output"
                     Height="100"
                     IsReadOnly="True"
                     Margin="10"/>
            <controls:ShotPlaybackControl x:Name="ShotPlayback"
                                          Margin="10" 
                                          Height="200"
                                          Items="{Binding Solution, UpdateSourceTrigger=PropertyChanged}"
                                          SelectedCollectionIndex="{Binding ShotCollectionSelectedId}"/>
         </StackPanel>
      </GroupBox>
      <!-- Bottom Button Bar -->
      <Border Grid.Row="2" Grid.ColumnSpan="3" Style="{StaticResource borderSubMain}" Margin="5,2,5,5">
         <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Style="{StaticResource standardButton}" Content="Exit" Click="ExitButtonClick"/>
            <Button Style="{StaticResource standardButton}" Content="Run" Click="RunButtonClick" IsEnabled="{Binding RunButtonEnabled, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Style="{StaticResource standardButton}" Content="Default Values" Click="DefaultValuesButtonClick"/>
         </StackPanel>
      </Border>
   </Grid>
</Window>
